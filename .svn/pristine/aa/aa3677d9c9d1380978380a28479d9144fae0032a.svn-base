package com.tbb.testscripts.coach;

import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.testng.Reporter;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.tbb.framework.BaseTest;
import com.tbb.framework.ConfigFileReader;
import com.tbb.pages.DashboardPage;
import com.tbb.pages.HomePage;
import com.tbb.pages.SignInPage;
import com.tbb.pages.coach.CoachPage;

/**
 * 
 * This test script contains test method(s) for main Coach tab
 * @author Gaurav
 */
public class TestCoachTab extends BaseTest {

	@BeforeClass
	public void setUp() {
		startSeleniumServer();
	}
	
	@BeforeMethod
	public void setUp(Method method) {
		createSeleniumInstance(method);		
	}

	
	@AfterMethod
	public void stopSelenium() {
		stopSeleniumInstance();
	}
	
	@AfterClass
	public void tearDown() {		
		stopSeleniumServer();
	}
	
	/**
	 * This page verifies main Coach tab. It verifies UI of page, presence of required web elements.
	 * It also verifies Brand Count and Brand Names along with verification of number of coach clips and their titles.
	 */
	@Test
	public void testCoach() {
		logger.info("Creating link for 'Detailed Report' in TestNG/ReportNG Logs");
		Reporter.log("<a href=" + "file://" + resultHtmlFileName	+ ">Detailed Report</a>");
		
		logger.info("Verifying whether are on Home page");
		HomePage homePage  = new HomePage(selenium);
		
		logger.info("Clicking on 'Sign In' Link");
		DashboardPage dashboardPage;
		if(ConfigFileReader.getConfigItemValue("selenium.browser").equals("*iexploreproxy") || ConfigFileReader.getConfigItemValue("selenium.browser").equals("*safariproxy")) {
			dashboardPage = homePage.clickSignInSpecial(ConfigFileReader.getConfigItemValue("tbb.username"), ConfigFileReader.getConfigItemValue("tbb.password"));
		} else {
			SignInPage signInPage = homePage.clickSignIn();
			
			logger.info("Entering valid username and password");
			dashboardPage = signInPage.loginValidUser(ConfigFileReader.getConfigItemValue("tbb.username"), ConfigFileReader.getConfigItemValue("tbb.password"));
		}
		
		logger.info("Clicking on Coach tab");
		CoachPage coachPage = dashboardPage.clickCoachLink();
		
		logger.info("Verifying UI of page");
		coachPage.verifyUI();
		
		logger.info("Verifing Brand Count and Brand Names");
		assertTrue("Count of Brand Items not correct", coachPage.getBrandCount()==10, selenium);
		ArrayList<String> brandTitles = coachPage.getBrandTitles();
		String[] brandTitlesData = new String[] {"Shakeology®", "P90X®", "INSANITY®" ,"TurboFire®", "Hip Hop Abs®", "Brazil Butt Lift®", "Slim in 6®", "RevAbs®", "Body Gospel®", "Turbo Jam®"};
		List<String> brandTitlesDataList = Arrays.asList(brandTitlesData);
		assertTrue("Required Brand names not displayed", brandTitlesDataList.equals(brandTitles), selenium);
		
		logger.info("Verifing count of Coach Clips and tiles of Coach Clips");
		assertTrue("Count of Coach Clips not correct", coachPage.getCoachClipCount()==7, selenium);
		ArrayList<String> coachClipTitles = coachPage.getCoachClipTitles();
		String[] coachClipTitlesData = new String[] {"Introducing Team Beachbody", "Shakeology from the Fields", "Success Stories Compilation" ,"See What Doctors Are Saying about Shakeology", "P90X®", "INSANITY®", "TurboFire®"};
		List<String> coachClipTitlesDataList = Arrays.asList(coachClipTitlesData);
		assertTrue("Required Coach Clips not displayed", coachClipTitlesDataList.equals(coachClipTitles), selenium);
			
		
		logger.info("Executing assertEmpty method");
		emptyMessageBuilder();
		
	}
}
